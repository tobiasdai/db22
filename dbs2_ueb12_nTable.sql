DELETE FROM N_CHARACTER;
DELETE FROM MOVIE_GENRE;
DELETE FROM N_MOVIE;
DELETE FROM N_PERSON;
DELETE FROM N_GENRE;

-- sequence

select * from N_MOVIE;
select * from N_PERSON;
select * from N_GENRE;
select * from N_CHARACTER;
select * from MOVIE_GENRE;

--select * from moviedb.movie;
--select * from moviedb.genre;
--select * from moviedb.plays;
--select * from moviedb.person;

-- Stored Procedure

-- SET_SEQ
/*
EXECUTE CLEAR_TABLE;
ALTER SEQUENCE HIBERNATE_SEQUENCE INCREMENT BY + 10000000;
ALTER SEQUENCE HIBERNATE_SEQUENCE increment by 1 minvalue 10000000;
SELECT HIBERNATE_SEQUENCE.NEXTVAL FROM DUAL;
*/

-- LEER TABLES
CREATE OR REPLACE
PROCEDURE CLEAR_TABLE AS
BEGIN
  RESET_SEQ('HIBERNATE_SEQUENCE');
END;
/
-- IMPORT GENRE
CREATE OR REPLACE
PROCEDURE IMPORT_GENRE AS
  V_M_GENRE MOVIEDB.GENRE.GENRE%TYPE;
  CURSOR C1
    IS SELECT DISTINCT GENRE FROM MOVIEDB.GENRE;
BEGIN
  OPEN C1;
  LOOP
    FETCH C1 INTO V_M_GENRE;
    EXIT WHEN C1%NOTFOUND;
    INSERT INTO N_GENRE VALUES(HIBERNATE_SEQUENCE.NEXTVAL, V_M_GENRE);
  END LOOP;
  CLOSE C1;
END;
/
-- IMPORT TO HASGENRE
CREATE OR REPLACE
PROCEDURE IMPORT_HASGENRE(MOVIEID NUMBER) AS
  V_GENRE_ID N_GENRE.ID%TYPE;
  V_M_GENRE MOVIEDB.GENRE%ROWTYPE;
  CURSOR C1
    IS SELECT * FROM MOVIEDB.GENRE WHERE MOVIE=MOVIEID;
BEGIN
  OPEN C1;
  LOOP
    FETCH C1 INTO V_M_GENRE;
    EXIT WHEN C1%NOTFOUND;
    SELECT ID INTO V_GENRE_ID FROM N_GENRE WHERE GENRE=V_M_GENRE.GENRE;
    INSERT INTO MOVIE_GENRE VALUES(MOVIEID, V_GENRE_ID);
  END LOOP;
  CLOSE C1;
END;
/
-- IMPORT PLAYS 
CREATE OR REPLACE
PROCEDURE IMPORT_PLAYS(MOVIEID NUMBER) AS
  V_M_PLAYS MOVIEDB.PLAYS%ROWTYPE;
  CURSOR C1
    IS SELECT * FROM MOVIEDB.PLAYS WHERE MOVIE=MOVIEID AND POS IS NOT NULL;
BEGIN
  OPEN C1;
  LOOP
    FETCH C1 INTO V_M_PLAYS;
    EXIT WHEN C1%NOTFOUND;
    INSERT INTO N_CHARACTER VALUES(HIBERNATE_SEQUENCE.NEXTVAL, V_M_PLAYS.ALIAS, V_M_PLAYS.CHARACTER, V_M_PLAYS.POS,
      MOVIEID, IMPORT_PERSON(V_M_PLAYS.PLAYER));
  END LOOP;
  CLOSE C1;
END;
/
-- IMPORT PERSON
--DROP PROCEDURE IMPORT_PERSON;
CREATE OR REPLACE
FUNCTION IMPORT_PERSON(PLAYER NUMBER) 
  RETURN NUMBER
  AS
    V_M_PERSON MOVIEDB.PERSON%ROWTYPE;
    V_PERSON_ID NUMBER;
    L_EXST NUMBER;
BEGIN
  SELECT * INTO V_M_PERSON FROM MOVIEDB.PERSON WHERE ID=PLAYER;
  SELECT COUNT(*) INTO L_EXST FROM N_PERSON WHERE NAME=V_M_PERSON.NAME;
  IF L_EXST = 0
  THEN
    V_PERSON_ID := V_M_PERSON.ID;
    INSERT INTO N_PERSON VALUES(V_PERSON_ID, V_M_PERSON.NAME, V_M_PERSON.SEX);
  ELSE
    SELECT ID INTO V_PERSON_ID FROM N_PERSON WHERE NAME=V_M_PERSON.NAME;
  END IF;
  RETURN V_PERSON_ID;
END;
/
-- IMPORT MOVIE
CREATE OR REPLACE
PROCEDURE IMPORTIEREN(P VARCHAR2) AS
  V_MOVIE MOVIEDB.MOVIE%ROWTYPE;
  V_N_MOVIE N_MOVIE%ROWTYPE;
  I NUMBER := 0;
  L_EXST NUMBER;
  CURSOR c1 is 
    SELECT * FROM MOVIEDB.MOVIE
    WHERE UPPER(TYPE) LIKE UPPER('%'||P||'%') 
    OR YEAR LIKE '%'||P||'%'
    OR UPPER(TITLE) LIKE UPPER('%'||P||'%');
BEGIN
  OPEN c1;
  WHILE I < 30 LOOP
    FETCH c1 INTO V_MOVIE;
    EXIT WHEN c1%NOTFOUND;
    SELECT COUNT(*) INTO L_EXST FROM N_MOVIE WHERE ID=V_MOVIE.ID;
    IF L_EXST = 0
    THEN
      INSERT INTO N_MOVIE VALUES(V_MOVIE.ID, V_MOVIE.TITLE, V_MOVIE.TYPE, V_MOVIE.YEAR, 1);
      IMPORT_HASGENRE(V_MOVIE.ID);
      IMPORT_PLAYS(V_MOVIE.ID);
      I := I + 1;
    END IF;
  END LOOP;
  CLOSE c1;
  COMMIT;
END;
/


EXECUTE IMPORT_GENRE;
EXECUTE IMPORTIEREN('star');
--EXECUTE CLEAR_TABLE;
COMMIT;







